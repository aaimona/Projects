# Solution to one of Karan's projects - Fibonacci sequence of length x
# Code is sooo clumsy, but this is actually my first try in anything that is not DataCamp, Swirl or Coursera :)
 fibonacci <- function(x) {
  n_base <- c(0, 1)
  if(x <= 0) {
    print("Error: vector length is negative")
    return(c())
  } else if(x == 1) {
    return(n_base[1])
  } else if(x == 2) {
    return(n_base)
  } else {
  for(i in 1:(x-2)) {
    n_add <- append(n_base, sum(n_base[length(n_base)-1], n_base[length(n_base)]))
    n_base <- n_add
  }
  print(n_base)
}
}

# Here i return xth term of Fibonacci sequence:
# (just one tiny correction at the end)
fibonacci_xth <- function(x) {
  n_base <- c(0, 1)
  if(x <= 0) {
    print("Error: vector length is negative")
    return(c())
  } else if(x == 1) {
    return(n_base[1])
  } else if(x == 2) {
    return(n_base[2])
  } else {
    for(i in 1:(x-2)) {
      n_add <- append(n_base, sum(n_base[length(n_base)-1], n_base[length(n_base)]))
      n_base <- n_add
    }
    print(n_base[length(n_base)])
  }
}

# ... or another version - here the code doesn't create any vector. I'm just juggling with newly created terms
fib_x <- function(x) {
  n_1 <- 0
  n_2 <- 1
  if(x <= 0) {
    print("Error: cannot return negative sequence term")
    return(c())
  } else if(x == 1) {
    return(n_1)
  } else if(x == 2) {
    return(n_2)
  } else {
    for(i in 1:(x-2)) {
      n_3 <- n_1 + n_2
      n_1 <- n_2
      n_2 <- n_3
    }
    print(n_3)
  }
}
